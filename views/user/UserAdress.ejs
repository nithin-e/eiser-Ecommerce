<%- include('Header') %>
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
    }

    .container1 {
        display: flex;
        flex-direction: column;
        width: 95%;
        max-width: 1200px;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        margin: 20px auto;
    }

    .sidebar {
        width: 100%;
        background-color: #f8f8f8;
        padding: 20px;
        border-bottom: 1px solid #ddd;
    }

    .sidebar table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 10px;
    }

    .sidebar table tr {
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: all 0.2s ease;
    }

    .sidebar table tr:hover,
    .sidebar table tr.active {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        background-color: #71cd14;
    }

    .sidebar table td {
        padding: 15px 20px;
    }

    .sidebar table td a {
        text-decoration: none;
        color: #333;
        font-weight: bold;
        display: block;
        text-align: center;
    }

    .content {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        padding: 30px;
    }

    .address-section {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        width: 90%;
        max-width: 400px;
        border: 1px solid #ddd;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        border-radius: 5px;
    }

    .icon {
        width: 100px;
        height: 100px;
        position: relative;
        margin: -35px;
    }

    .location-pin {
        width: 100%;
        height: 100%;
        background-color: #ffebee;
        border-radius: 50% 50% 50% 0;
        transform: rotate(-45deg);
    }

    .location-pin::after {
        content: "";
        width: 30px;
        height: 30px;
        background-color: white;
        position: absolute;
        border-radius: 50%;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(45deg);
    }

    .arrow {
        width: 30px;
        height: 30px;
        background-color: #ff4081;
        position: absolute;
        right: -5px;
        bottom: -5px;
        border-radius: 4px;
    }

    .arrow::before {
        content: "‚Üê";
        color: white;
        font-size: 20px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .address-info {
        text-align: center;
        margin: 0 20px;
    }

    .address-info h1 {
        font-size: 20px;
    }

    .add-button {
        background-color: white;
        color: #28a745;
        border: 1px solid #28a745;
        padding: 9px 20px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 4px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: background-color 0.3s, color 0.3s;
        margin-top: 20px;
    }

    .add-button:hover {
        background-color: #71cd14;
        color: white;
    }

    .modal {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        border-radius: 4px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
        width: 90%;
        max-width: 400px;
        max-height: 80vh;
        overflow-y: auto;
        z-index: 1000;
        display: none;
    }

    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        display: none;
        z-index: 999;
    }

    .form-group {
        margin-bottom: 15px;
    }

    label {
        display: block;
        margin-bottom: 5px;
        font-size: 14px;
    }

    input[type="text"],
    input[type="tel"] {
        width: 100%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .form-row {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
    }

    .form-row .form-group {
        flex: 1 1 100%;
    }

    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 20px;
    }

    .btn-cancel,
    .btn-save {
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-cancel {
        background-color: #f0f0f0;
        color: #333;
    }

    .btn-save {
        background-color: #ff3f6c;
        color: white;
    }

    .address-container {
        font-family: 'Assistant', sans-serif;
        font-size: 14px;
        width: 95%;
        max-width: 600px;
        margin: 0 auto;
        color: #696E79;
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 8px;
    }

    .addd-button {
        background-color: white;
        color: blue;
        border: 3px solid blue;
        padding: 10px 14px;
        cursor: pointer;
        font-size: 16px;
    }

    .address-card {
        border: 1px solid #ccc;
        padding: 8px;
        margin-top: 20px;
        box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
    }

    .name-type {
        display: flex;
        justify-content: space-between;
        margin-bottom: 4px;
    }

    .type {
        color: #888;
        font-size: 12px;
    }

    .actions {
        display: flex;
        justify-content: flex-end;
        margin-top: 6px;
    }

    .edit-button,
    .remove-button {
        border: none;
        color: white;
        cursor: pointer;
        margin-right: 4px;
        padding: 4px 8px;
        font-size: 12px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .edit-button {
        background-color: green;
    }

    .remove-button {
        background-color: red;
    }

    .main-heading {
        text-align: center;
        margin-top: 15px;
    }

    .address-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
        margin-top: -10px;
    }

    .add-address-card {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #f9f9f9;
        padding: 20px;
        margin-bottom: 20px;
    }

    .address-details {
        width: 100%;
    }

    @media (min-width: 768px) {
        .container1 {
            flex-direction: row;
        }

        .sidebar {
            width: 25%;
            border-right: 1px solid #ddd;
            border-bottom: none;
        }

        .content {
            width: 75%;
        }

        .form-row .form-group {
            flex: 1 1 45%;
        }
    }

    @media (max-width: 767px) {
        .address-grid {
            grid-template-columns: 1fr;
        }

        .add-address-card {
            margin-left: 0;
        }
    }

/* alert */

</style>








<div class="container1">
    <%- include('./partials/userProfileSlidebar') %>
             
    <% if (!alladress || alladress.length === 0) { %>
        <div class="content">
            <div class="address-section">
                <div class="icon">
                    <div class="location-pin"></div>
                    <div class="arrow"></div>
                </div>
                <br><br><br>
                <div class="address-info">
                    <h1>SAVE YOUR ADDRESSES NOW</h1>
                    <p>Add your addresses and enjoy faster checkout</p>
                    <button class="add-button" onclick="openModal()">+ ADD NEW ADDRESS</button>
                </div>
            </div>
        </div>
    <% }  else { %>
        <div class="address-container">
            <h2 class="main-heading">YOUR ADDRESSES</h2>
            <div class="add-address-card">
                <button class="add-button" onclick="openModal()">+ ADD NEW</button>
            </div>
            <div class="address-grid">
                <% alladress.forEach(address => { %>
                    <% address.addresses.forEach(element => { %>
                        <div class="address-card">
                            <div class="address-details">
                                <div class="name-type">
                                    <span class="name">Name: <%= element.name %></span>
                                </div>
                                <p>Address: <%= element.address %></p>
                                <p>State: <%= element.state %></p>
                                <p>Locality: <%= element.locality %></p>
                                <p>City: <%= element.city %></p>
                                <p>PinCode: <%= element.pincode %></p>
                                <p>Mobile: <%= element.mobile %></p>
                            </div>
                            <div class="actions">
                                <button class="edit-button" 
                                    type="button"
                                    data-id="<%= element._id %>"
                                    data-name="<%= element.name %>"
                                    data-address="<%= element.address %>"
                                    data-state="<%= element.state %>"
                                    data-locality="<%= element.locality %>"
                                    data-city="<%= element.city %>"
                                    data-pincode="<%= element.pincode %>"
                                    data-mobile="<%= element.mobile %>"
                                    onclick="showModal(this)">EDIT</button>
                                <button class="remove-button" onclick="deletingAddress('<%= element._id %>')">REMOVE</button>
                            </div>
                        </div>
                    <% }); %>
                <% }); %>  
            </div>
        </div>
    <% } %>
</div>




<!-- addmodal -->

<div id="addressModal" class="modal">
    <h2>ADD NEW ADDRESS</h2>
    <form id="addressForm">
        <div class="form-group">
            <label for="name">Name *</label>
            <input type="text" id="name" name="name" required>
        </div>
        <div class="form-group">
            <label for="mobile">Mobile *</label>
            <input type="tel" id="mobile" name="mobile" required>
        </div>
        <div class="form-row">
            <div class="form-group">
                <label for="pincode">Pincode *</label>
                <input type="text" id="pincode" name="pincode" required>
            </div>
            <div class="form-group">
                <label for="state">State *</label>
                <input type="text" id="state" name="state" required>
            </div>
        </div>
        <div class="form-group">
            <label for="address">Address (House No, Building, Street, Area) *</label>
            <input type="text" id="address" name="address" required>
        </div>
        <div class="form-group">
            <label for="locality">Locality/Town *</label>
            <input type="text" id="locality" name="locality" required>
        </div>
        <div class="form-group">
            <label for="city">City/District *</label>
            <input type="text" id="city" name="city" required>
        </div>
        <div class="form-actions">
            <button type="button" class="btn-cancel" onclick="closeModal()">CANCEL</button>
            <button type="submit" class="btn-save">SAVE</button>
        </div>
    </form>
</div>
<!-- end of addmodal -->

<div id="addressEditModal" class="modal">
    <h2>EDIT ADDRESS</h2>
    <form id="addressEditForm">
        <input type="hidden" id="edit-id" name="id">
        <div class="form-group">
            <label for="edit-name">Name *</label>
            <input type="text" id="edit-name" name="name" required>
        </div>
        <div class="form-group">
            <label for="edit-mobile">Mobile *</label>
            <input type="tel" id="edit-mobile" name="mobile" required>
        </div>
        <div class="form-row">
            <div class="form-group">
                <label for="edit-pincode">Pincode *</label>
                <input type="text" id="edit-pincode" name="pincode" required>
            </div>
            <div class="form-group">
                <label for="edit-state">State *</label>
                <input type="text" id="edit-state" name="state" required>
            </div>
        </div>
        <div class="form-group">
            <label for="edit-address">Address (House No, Building, Street, Area) *</label>
            <input type="text" id="edit-address" name="address" required>
        </div>
        <div class="form-group">
            <label for="edit-locality">Locality/Town *</label>
            <input type="text" id="edit-locality" name="locality" required>
        </div>
        <div class="form-group">
            <label for="edit-city">City/District *</label>
            <input type="text" id="edit-city" name="city" required>
        </div>
        <div class="form-actions">
            <button type="button" class="btn-cancel" onclick="stopModal()">CANCEL</button>
            <button type="submit" class="btn-save">SAVE</button>
        </div>
    </form>
</div>
<div id="modalOverlayOne" class="modal-overlay"></div>
<!-- End Edit Modal -->






<div id="modalOverlay" class="modal-overlay"></div>

<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>
function openModal() {
    const modal = document.getElementById('addressModal');
    const overlay = document.getElementById('modalOverlay');
    modal.style.display = 'block';
    overlay.style.display = 'block';
    document.body.style.overflow = 'hidden';
}

function closeModal() {
    const modal = document.getElementById('addressModal');
    const overlay = document.getElementById('modalOverlay');
    modal.style.display = 'none';
    overlay.style.display = 'none';
    document.body.style.overflow = 'auto';
}

document.getElementById('modalOverlay').addEventListener('click', closeModal);

document.getElementById('addressForm').addEventListener('submit', function(event) {
    event.preventDefault(); // Prevent the default form submission

    const name = document.getElementById('name').value;
    const mobile = document.getElementById('mobile').value;
    const pincode = document.getElementById('pincode').value;
    const state = document.getElementById('state').value;
    const address = document.getElementById('address').value;
    const locality = document.getElementById('locality').value;
    const city = document.getElementById('city').value;

    const data = {
        name: name,
        mobile: mobile,
        pincode: pincode,
        state: state,
        address: address,
        locality: locality,
        city: city
    };

    fetch('/changeAddress', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            Toastify({
                text: result.msg,
                duration: 3000,
                close: true,
                gravity: "top",
                position: 'right',
                backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
                offset: {
                    x: 50,
                    y: 60
                },
            }).showToast();
            closeModal();
        } else {
            console.error('Failed to update address:', result.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
});

function showModal(button) {
    const idd = button.getAttribute("data-id");
    const name = button.getAttribute("data-name");
    const address = button.getAttribute("data-address");
    const state = button.getAttribute("data-state");
    const locality = button.getAttribute("data-locality");
    const city = button.getAttribute("data-city");
    const pincode = button.getAttribute("data-pincode");
    const mobile = button.getAttribute("data-mobile");

    console.log("Showing modal for ID:", idd);
    const modalOne = document.getElementById("addressEditModal");
    const overlayOne = document.getElementById("modalOverlayOne");

    // Populate modal fields
    document.getElementById("edit-id").value = idd;
    document.getElementById("edit-name").value = name;
    document.getElementById("edit-address").value = address;
    document.getElementById("edit-state").value = state;
    document.getElementById("edit-locality").value = locality;
    document.getElementById("edit-city").value = city;
    document.getElementById("edit-pincode").value = pincode;
    document.getElementById("edit-mobile").value = mobile;

    modalOne.style.display = "block";
    overlayOne.style.display = "block";
    document.body.style.overflow = "hidden";
}
  
function stopModal() {
    const modalOne = document.getElementById("addressEditModal");
    const overlayOne = document.getElementById("modalOverlayOne");
    modalOne.style.display = "none";
    overlayOne.style.display = "none";
    document.body.style.overflow = "auto";
}
  
document.getElementById("modalOverlayOne").addEventListener("click", stopModal);

document.addEventListener("click", function(event) {
    if (event.target.classList.contains('btn-cancel')) {
        stopModal();
    }
});

document.getElementById("addressEditForm").addEventListener("submit", function(event) {
    event.preventDefault();

    const id = document.getElementById("edit-id").value;
    const name = document.getElementById("edit-name").value;
    const mobile = document.getElementById("edit-mobile").value;
    const pincode = document.getElementById("edit-pincode").value;
    const state = document.getElementById("edit-state").value;
    const address = document.getElementById("edit-address").value;
    const locality = document.getElementById("edit-locality").value;
    const city = document.getElementById("edit-city").value;

    const data = {
        id: id,
        name: name,
        mobile: mobile,
        pincode: pincode,
        state: state,
        address: address,
        locality: locality,
        city: city
    };

    console.log("Editing address with ID:", id);

    fetch(`/Address-edit/${id}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            Toastify({
                text:result. msg,
                duration: 3000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
                offset: {
                    x: 50,
                    y: 60,
                },
            }).showToast();
            stopModal();
        } else {
            console.error('Failed to update address:', result.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
});


//deleting user address
function deletingAddress(id) {
    console.log("machu kittndo ", id);
    swal.fire({
        title: "Are you sure?",
        text: "Are you sure you want to remove this item? This cannot be undone.",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, remove it!"
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/AdressDelete/${id}`, {
                method: 'DELETE', 
                headers: {
                    'Content-Type': 'application/json'
                }
               
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    Toastify({
                        text: result.msg,
                        duration: 3000,
                        close: true,
                        gravity: "top",
                        position: "right",
                        backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
                        offset: {
                            x: 50,
                            y: 60
                        }
                    }).showToast();
                } else {
                    console.error('Failed to delete address:', result.message);
                }
            })
            .catch(error => {
                console.error('Network error:', error);
            });
        }
    });
}


</script>

<%- include('footer') %>
