

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Success Celebration</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js"></script>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            font-family: 'Poppins', sans-serif;
            background: #1a1a2e;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            color: #fff;
            overflow: hidden;
        }

        .success-container {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            backdrop-filter: blur(10px);
            padding: 40px;
            text-align: center;
            max-width: 400px;
            width: 90%;
            position: relative;
            overflow: hidden;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
        }

        .success-icon {
            font-size: 80px;
            margin-bottom: 20px;
        }

        h1 {
            font-size: 28px;
            margin-bottom: 10px;
            color: #4ecca3;
        }

        p {
            font-size: 16px;
            color: #eeeeee;
            margin-bottom: 30px;
        }

        .order-number {
            font-size: 24px;
            font-weight: 600;
            color: #ffd369;
            margin-bottom: 30px;
        }

        .btn {
            display: inline-block;
            padding: 12px 24px;
            background-color: #4ecca3;
            color: #1a1a2e;
            text-decoration: none;
            border-radius: 50px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin: 0 10px;
            position: relative;
            overflow: hidden;
        }

        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(78, 204, 163, 0.4);
        }

        .btn-secondary {
            background-color: #ffd369;
        }

        .particle {
            position: absolute;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            pointer-events: none;
        }

        .firework {
            position: absolute;
            width: 5px;
            height: 5px;
            border-radius: 50%;
        }

        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-20px); }
            100% { transform: translateY(0px); }
        }

        @media (max-width: 480px) {
            .success-container {
                padding: 30px;
            }
            h1 {
                font-size: 24px;
            }
            .order-number {
                font-size: 20px;
            }
            .btn {
                display: block;
                margin: 10px 0;
            }
        }
    </style>
</head>
<body>
    <div class="success-container">
        <div class="success-icon" id="successIcon">ðŸŽ‰</div>
        <h1 id="successTitle">Order Successful!</h1>
        <p id="successMessage">Thank you for your purchase. Your order is on its way!</p>
        <div class="order-number" id="orderNumber">Order #: </div>
        <a href="/" class="btn btn-secondary" id="homeBtn">Home Page</a>
        <a href="/userOrder" class="btn" id="ordersBtn">My Orders</a>
    </div>

    <script>
        // Animated elements
        gsap.from("#successIcon", {duration: 1, scale: 0, ease: "bounce.out"});
        gsap.from("#successTitle", {duration: 1, y: 50, opacity: 0, delay: 0.5});
        gsap.from("#successMessage", {duration: 1, y: 50, opacity: 0, delay: 0.7});

        // Floating animation
        gsap.to("#successIcon", {
            y: -20,
            duration: 2,
            repeat: -1,
            yoyo: true,
            ease: "power1.inOut"
        });

        // Order number animation
        const orderNumber = Math.floor(100000 + Math.random() * 900000);
        const orderElement = document.getElementById('orderNumber');
        gsap.to(orderElement, {
            duration: 2,
            text: `Order #: ${orderNumber}`,
            ease: "none",
            onUpdate: function() {
                orderElement.textContent = `Order #: ${Math.floor(this.targets()[0].text.split('#: ')[1])}`;
            }
        });

        // Button animations
        gsap.from("#homeBtn", {duration: 1, x: -100, opacity: 0, delay: 1});
        gsap.from("#ordersBtn", {duration: 1, x: 100, opacity: 0, delay: 1});

        // Particle animation
        function createParticle() {
            const particle = document.createElement('div');
            particle.classList.add('particle');
            document.body.appendChild(particle);

            gsap.set(particle, {
                x: Math.random() * window.innerWidth,
                y: Math.random() * window.innerHeight,
                scale: Math.random() * 0.5 + 0.5,
                backgroundColor: `hsl(${Math.random() * 360}, 100%, 50%)`
            });

            gsap.to(particle, {
                y: window.innerHeight + 20,
                duration: Math.random() * 2 + 1,
                ease: "power1.out",
                onComplete: () => {
                    document.body.removeChild(particle);
                    createParticle();
                }
            });
        }

        // Firework animation
        function createFirework() {
            const firework = document.createElement('div');
            firework.classList.add('firework');
            document.body.appendChild(firework);

            const x = Math.random() * window.innerWidth;
            const y = Math.random() * window.innerHeight;

            gsap.set(firework, {x, y});

            gsap.to(firework, {
                scale: 30,
                opacity: 0,
                duration: 0.6,
                ease: "power2.out",
                onComplete: () => {
                    document.body.removeChild(firework);
                    setTimeout(createFirework, Math.random() * 1000);
                }
            });
        }

        // Create initial particles and fireworks
        for (let i = 0; i < 50; i++) {
            setTimeout(createParticle, i * 100);
        }
        for (let i = 0; i < 5; i++) {
            setTimeout(createFirework, i * 500);
        }
    </script>
</body>
</html>